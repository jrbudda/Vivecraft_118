--- a/net/minecraft/client/MouseHandler.java
+++ b/net/minecraft/client/MouseHandler.java
@@ -9,6 +9,7 @@
 import net.minecraft.client.gui.screens.Screen;
 import net.minecraft.util.Mth;
 import net.minecraft.util.SmoothDouble;
+import net.optifine.reflect.Reflector;
 import org.lwjgl.glfw.GLFWDropCallback;
 
 public class MouseHandler
@@ -31,13 +32,14 @@
     private double accumulatedScroll;
     private double lastMouseEventTime = Double.MIN_VALUE;
     private boolean mouseGrabbed;
+    private boolean butts = true;
 
     public MouseHandler(Minecraft pMinecraft)
     {
         this.minecraft = pMinecraft;
     }
 
-    private void onPress(long pWindowPointer, int p_91532_, int pButton, int pAction)
+    public void onPress(long pWindowPointer, int p_91532_, int pButton, int pAction)
     {
         if (pWindowPointer == this.minecraft.getWindow().getWindow())
         {
@@ -82,6 +84,11 @@
                 this.activeButton = -1;
             }
 
+            if (Reflector.callBoolean(Reflector.ForgeHooksClient_onRawMouseClicked, p_91532_, pButton, pAction))
+            {
+                return;
+            }
+
             boolean[] aboolean = new boolean[] {false};
 
             if (this.minecraft.getOverlay() == null)
@@ -104,15 +111,47 @@
                         screen.afterMouseAction();
                         Screen.wrapScreenError(() ->
                         {
-                            aboolean[0] = screen.mouseClicked(d0, d1, i);
-                        }, "mouseClicked event handler", screen.getClass().getCanonicalName());
+                            if (Reflector.ForgeHooksClient_onGuiMouseClickedPre.exists())
+                            {
+                                aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseClickedPre, this.minecraft.screen, d0, d1, i);
+
+                                if (!aboolean[0])
+                                {
+                                    aboolean[0] = this.minecraft.screen.mouseClicked(d0, d1, i);
+                                }
+
+                                if (!aboolean[0])
+                                {
+                                    aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseClickedPost, this.minecraft.screen, d0, d1, i, aboolean[0]);
+                                }
+                            }
+                            else {
+                                aboolean[0] = this.minecraft.screen.mouseClicked(d0, d1, i);
+                            }
+                        }, "mouseClicked event handler", this.minecraft.screen.getClass().getCanonicalName());
                     }
                     else
                     {
                         Screen.wrapScreenError(() ->
                         {
-                            aboolean[0] = screen.mouseReleased(d0, d1, i);
-                        }, "mouseReleased event handler", screen.getClass().getCanonicalName());
+                            if (Reflector.ForgeHooksClient_onGuiMouseReleasedPre.exists())
+                            {
+                                aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseReleasedPre, this.minecraft.screen, d0, d1, i);
+
+                                if (!aboolean[0])
+                                {
+                                    aboolean[0] = this.minecraft.screen.mouseReleased(d0, d1, i);
+                                }
+
+                                if (!aboolean[0])
+                                {
+                                    aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseReleasedPost, this.minecraft.screen, d0, d1, i, aboolean[0]);
+                                }
+                            }
+                            else {
+                                aboolean[0] = this.minecraft.screen.mouseReleased(d0, d1, i);
+                            }
+                        }, "mouseReleased event handler", this.minecraft.screen.getClass().getCanonicalName());
                     }
                 }
             }
@@ -136,7 +175,7 @@
 
                 if (flag)
                 {
-                    if (this.minecraft.player.isSpectator() && i == 2)
+                    if (this.minecraft.player != null && this.minecraft.player.isSpectator() && i == 2)
                     {
                         this.minecraft.gui.getSpectatorGui().onMouseMiddleClick();
                     }
@@ -146,10 +185,12 @@
                     }
                 }
             }
+
+            Reflector.call(Reflector.ForgeHooksClient_fireMouseInput, p_91532_, pButton, pAction);
         }
     }
 
-    private void onScroll(long pWindowPointer, double p_91528_, double pXOffset)
+    public void onScroll(long pWindowPointer, double p_91528_, double pXOffset)
     {
         if (pWindowPointer == Minecraft.getInstance().getWindow().getWindow())
         {
@@ -161,6 +202,19 @@
                 {
                     double d1 = this.xpos * (double)this.minecraft.getWindow().getGuiScaledWidth() / (double)this.minecraft.getWindow().getScreenWidth();
                     double d2 = this.ypos * (double)this.minecraft.getWindow().getGuiScaledHeight() / (double)this.minecraft.getWindow().getScreenHeight();
+
+                    if (Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseScrollPre, this, this.minecraft.screen, d0))
+                    {
+                        return;
+                    }
+
+                    if (this.minecraft.screen.mouseScrolled(d1, d2, d0))
+                    {
+                        return;
+                    }
+                    
+                    Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseScrollPost, this, this.minecraft.screen, d0);
+
                     this.minecraft.screen.mouseScrolled(d1, d2, d0);
                     this.minecraft.screen.afterMouseAction();
                 }
@@ -181,6 +235,11 @@
 
                     this.accumulatedScroll -= (double)i;
 
+                    if (Reflector.callBoolean(Reflector.ForgeHooksClient_onMouseScroll, this, d0))
+                    {
+                        return;
+                    }
+
                     if (this.minecraft.player.isSpectator())
                     {
                         if (this.minecraft.gui.getSpectatorGui().isMenuActive())
@@ -242,7 +301,7 @@
         });
     }
 
-    private void onMove(long pWindowPointer, double p_91563_, double pXpos)
+    public void onMove(long pWindowPointer, double p_91563_, double pXpos)
     {
         if (pWindowPointer == Minecraft.getInstance().getWindow().getWindow())
         {
@@ -270,7 +329,13 @@
                     double d3 = (pXpos - this.ypos) * (double)this.minecraft.getWindow().getGuiScaledHeight() / (double)this.minecraft.getWindow().getScreenHeight();
                     Screen.wrapScreenError(() ->
                     {
-                        screen.mouseDragged(d0, d1, this.activeButton, d2, d3);
+                        if (!Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseDragPre, this.minecraft.screen, d0, d1, this.activeButton, d2, d3))
+                        {
+                            if (!screen.mouseDragged(d0, d1, this.activeButton, d2, d3))
+                            {
+                                Reflector.call(Reflector.ForgeHooksClient_onGuiMouseDragPost, this.minecraft.screen, d0, d1, this.activeButton, d2, d3);
+                            }
+                        }
                     }, "mouseDragged event handler", screen.getClass().getCanonicalName());
                 }
 
@@ -294,6 +359,9 @@
 
     public void turnPlayer()
     {
+    	//Vivecraft
+    	if(butts) return;
+    	//
         double d0 = Blaze3D.getTime();
         double d1 = d0 - this.lastMouseEventTime;
         this.lastMouseEventTime = d0;
@@ -376,6 +444,21 @@
         return this.ypos;
     }
 
+    public boolean isMiddleDown()
+    {
+        return this.isMiddlePressed;
+    }
+
+    public double getXVelocity()
+    {
+        return this.accumulatedDX;
+    }
+
+    public double getYVelocity()
+    {
+        return this.accumulatedDY;
+    }
+
     public void setIgnoreFirstMove()
     {
         this.ignoreFirstMove = true;
@@ -388,9 +471,13 @@
 
     public void grabMouse()
     {
-        if (this.minecraft.isWindowActive())
+        if (!this.minecraft.vrSettings.seated)
         {
-            if (!this.mouseGrabbed)
+            this.mouseGrabbed = true;
+        }
+        else
+        {
+            if (this.minecraft.isWindowActive() && !this.mouseGrabbed)
             {
                 if (!Minecraft.ON_OSX)
                 {
@@ -410,12 +497,19 @@
 
     public void releaseMouse()
     {
-        if (this.mouseGrabbed)
+        if (!this.minecraft.vrSettings.seated)
         {
             this.mouseGrabbed = false;
-            this.xpos = (double)(this.minecraft.getWindow().getScreenWidth() / 2);
-            this.ypos = (double)(this.minecraft.getWindow().getScreenHeight() / 2);
-            InputConstants.grabOrReleaseMouse(this.minecraft.getWindow().getWindow(), 212993, this.xpos, this.ypos);
+        }
+        else
+        {
+            if (this.mouseGrabbed)
+            {
+                this.mouseGrabbed = false;
+                this.xpos = (double)(this.minecraft.getWindow().getScreenWidth() / 2);
+                this.ypos = (double)(this.minecraft.getWindow().getScreenHeight() / 2);
+                InputConstants.grabOrReleaseMouse(this.minecraft.getWindow().getWindow(), 212993, this.xpos, this.ypos);
+            }
         }
     }
 
